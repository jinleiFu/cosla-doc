"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[7690],{512:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3df546b7",path:"/pages/knowledge/developmentNorm.html",title:"开发约定",lang:"zh-CN",frontmatter:{pageClass:"page-with-toc"},excerpt:"",headers:[{level:2,title:"命名",slug:"命名",children:[]},{level:2,title:"Vue",slug:"vue",children:[]},{level:2,title:"代码片段",slug:"代码片段",children:[]}],filePathRelative:"pages/knowledge/developmentNorm.md",git:{updatedTime:1650097414e3,contributors:[{name:"jinleiFu",email:"1928537900@qq.com",commits:2}]}}},7056:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var p=a(6252);const e={class:"table-of-contents"},t=(0,p.Uk)("命名"),o=(0,p.Uk)("Vue"),c=(0,p.Uk)("代码片段"),l=(0,p.uE)('<h1 id="开发约定" tabindex="-1"><a class="header-anchor" href="#开发约定" aria-hidden="true">#</a> 开发约定</h1><h2 id="命名" tabindex="-1"><a class="header-anchor" href="#命名" aria-hidden="true">#</a> 命名</h2><ul><li><p>普通命名采用小驼峰式命名</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> userName <span class="token operator">=</span> <span class="token string">&#39;Jerrry&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>复数的时候需要加 s</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>每个常量都需命名，且名称全大写</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token constant">COL_NUM</span> <span class="token operator">=</span> <span class="token number">10</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>命名语义化</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">const</span> userDetails <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>函数命名，采用加上动词前缀</p><ul><li>can 判断是否可执行某个动作</li><li>has 判断是否含有某个值</li><li>is 判断是否为某个值</li><li>get 获取某个值</li><li>set 设置某个值</li></ul></li></ul><h2 id="vue" tabindex="-1"><a class="header-anchor" href="#vue" aria-hidden="true">#</a> Vue</h2><ul><li><p>自定义组件名使用大驼峰</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>如：LeftBar\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div></li><li><p>props尽量定义详细</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\nprops<span class="token operator">:</span> <span class="token punctuation">{</span>\n  status<span class="token operator">:</span> String\n<span class="token punctuation">}</span>\n\n<span class="token comment">// not good</span>\nprops<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;status&#39;</span><span class="token punctuation">]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div></li><li><p>v-for 遍历必须添加 key（避免使用index作为key）</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token comment">&lt;!-- good --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in todos<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ todo.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- not good --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>todo in todos<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ todo.text }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>组件内样式设置作用域或添加顶级作用域</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">/* good  */</span>\n<span class="token selector">&lt;style scoped&gt;\n.button-close </span><span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token selector">&lt;/style&gt;\n\n&lt;style&gt;\n.homepage </span><span class="token punctuation">{</span>\n    <span class="token selector">.btn-close </span><span class="token punctuation">{</span>\n        <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n&lt;/style&gt;\n\n<span class="token comment">/* not good  */</span>\n<span class="token selector">&lt;style&gt;\n.btn-close </span><span class="token punctuation">{</span>\n  <span class="token property">background-color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n&lt;/style&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ul><h2 id="代码片段" tabindex="-1"><a class="header-anchor" href="#代码片段" aria-hidden="true">#</a> 代码片段</h2><ul><li><p>用字面量赋值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li><li><p>用扩展运算符做浅拷贝</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> copyUserNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>userNames<span class="token punctuation">]</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> copyUserNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> len <span class="token operator">=</span> userNames<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  copyUserNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> userNames<span class="token punctuation">[</span>i<span class="token punctuation">]</span>\n<span class="token punctuation">}</span>\n\n\n<span class="token comment">// good</span>\n<span class="token keyword">const</span> sources <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token operator">...</span>sources<span class="token punctuation">,</span> sex<span class="token operator">:</span> <span class="token string">&#39;男&#39;</span><span class="token punctuation">}</span> <span class="token comment">// 若sources中有sex字段，则会自动覆盖sources中的sex</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> sources <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> target <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> sources<span class="token punctuation">,</span> <span class="token punctuation">{</span> sex<span class="token operator">:</span> <span class="token string">&#39;男&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li><li><p>使用解构赋值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>firstName<span class="token punctuation">,</span> secondName<span class="token punctuation">]</span> <span class="token operator">=</span> userNames\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> userNames <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;Jerrry&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> firstName <span class="token operator">=</span> userNames<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>\n<span class="token keyword">const</span> secondName <span class="token operator">=</span> userNames<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>\n\n<span class="token comment">// good</span>\n<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span> age<span class="token punctuation">}</span> <span class="token operator">=</span> person\n<span class="token comment">// 使用别名</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> userName<span class="token punctuation">,</span> age<span class="token operator">:</span> userAge<span class="token punctuation">}</span> <span class="token operator">=</span> person\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> <span class="token string">&#39;Jerry&#39;</span><span class="token punctuation">,</span> age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> name <span class="token operator">=</span> person<span class="token punctuation">.</span>name\n<span class="token keyword">const</span> age <span class="token operator">=</span> person<span class="token punctuation">.</span>age\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></li><li><p>对象使用属性缩写</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Jerry&#39;</span>\n<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span>\n<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token operator">:</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">}</span> <span class="token comment">// 属性缩写放置在前面</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string">&#39;Jerry&#39;</span>\n<span class="token keyword">const</span> age <span class="token operator">=</span> <span class="token number">18</span>\n<span class="token keyword">const</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token operator">:</span> name<span class="token punctuation">,</span> age<span class="token operator">:</span> age<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>函数参数使用默认值</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">function</span> <span class="token function">createPerson</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&#39;Jack&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">function</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  name <span class="token operator">=</span> name <span class="token operator">||</span> <span class="token string">&#39;Jack&#39;</span>\n   <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>函数参数超过两个时使用对象结构</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">function</span> <span class="token function">createDialog</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> buttonText<span class="token punctuation">,</span> cancelText<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n   <span class="token operator">...</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">createDialog</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">&#39;确认弹窗&#39;</span><span class="token punctuation">,</span>\n  body<span class="token operator">:</span> <span class="token string">&#39;是否确认删除？&#39;</span><span class="token punctuation">,</span>\n  buttonText<span class="token operator">:</span> <span class="token string">&#39;确认&#39;</span><span class="token punctuation">,</span>\n  cancelText<span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">function</span> <span class="token function">createDialog</span><span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> body<span class="token punctuation">,</span> buttonText<span class="token punctuation">,</span> cancelText</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div></li><li><p>for循环，数组的长度，使用一个变量来接收</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// good</span>\n<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> len <span class="token operator">=</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> len<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token operator">...</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// not good</span>\n<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n\t<span class="token operator">...</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 该方式的缺点在于当循环次数较多时，循环条件i &lt; arr.length会多次arr.length造成性能损耗</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li></ul>',7),r={},u=(0,a(3744).Z)(r,[["render",function(n,s){const a=(0,p.up)("RouterLink");return(0,p.wg)(),(0,p.iD)(p.HY,null,[(0,p._)("nav",e,[(0,p._)("ul",null,[(0,p._)("li",null,[(0,p.Wm)(a,{to:"#命名"},{default:(0,p.w5)((()=>[t])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#vue"},{default:(0,p.w5)((()=>[o])),_:1})]),(0,p._)("li",null,[(0,p.Wm)(a,{to:"#代码片段"},{default:(0,p.w5)((()=>[c])),_:1})])])]),l],64)}]])}}]);