"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[5516],{8526:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-040cb824",path:"/pages/developAttention/vehicleMiniprogram/",title:"小程序端开发事项",lang:"zh-CN",frontmatter:{pageClass:"page-with-toc"},excerpt:"",headers:[{level:2,title:"技术栈",slug:"技术栈",children:[]},{level:2,title:"开发环境",slug:"开发环境",children:[]},{level:2,title:"启动步骤",slug:"启动步骤",children:[]},{level:2,title:"注意事项",slug:"注意事项",children:[{level:3,title:"1.拉取代码",slug:"_1-拉取代码",children:[]},{level:3,title:"2.新建页面",slug:"_2-新建页面",children:[]},{level:3,title:"3.底部安全距离",slug:"_3-底部安全距离",children:[]},{level:3,title:"4.静态资源",slug:"_4-静态资源",children:[]},{level:3,title:"5.网络请求",slug:"_5-网络请求",children:[]},{level:3,title:"6.自定义组件覆盖uview组件样式问题",slug:"_6-自定义组件覆盖uview组件样式问题",children:[]},{level:3,title:"7.onLaunch异步问题",slug:"_7-onlaunch异步问题",children:[]}]},{level:2,title:"项目目录",slug:"项目目录",children:[]}],filePathRelative:"pages/developAttention/vehicleMiniprogram/README.md",git:{updatedTime:1650097414e3,contributors:[{name:"jinleiFu",email:"1928537900@qq.com",commits:6}]}}},139:(n,s,a)=>{a.r(s),a.d(s,{default:()=>C});var e=a(6252);const p={class:"table-of-contents"},t=(0,e.Uk)("技术栈"),l=(0,e.Uk)("开发环境"),o=(0,e.Uk)("启动步骤"),c=(0,e.Uk)("注意事项"),i=(0,e.Uk)("1.拉取代码"),r=(0,e.Uk)("2.新建页面"),u=(0,e.Uk)("3.底部安全距离"),k=(0,e.Uk)("4.静态资源"),d=(0,e.Uk)("5.网络请求"),b=(0,e.Uk)("6.自定义组件覆盖uview组件样式问题"),m=(0,e.Uk)("7.onLaunch异步问题"),h=(0,e.Uk)("项目目录"),g=(0,e._)("h1",{id:"小程序端开发事项",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#小程序端开发事项","aria-hidden":"true"},"#"),(0,e.Uk)(" 小程序端开发事项")],-1),v=(0,e._)("h2",{id:"技术栈",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#技术栈","aria-hidden":"true"},"#"),(0,e.Uk)(" 技术栈")],-1),_={href:"https://cn.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},f=(0,e.Uk)("Vue@2.x"),w={href:"https://vuex.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"},x=(0,e.Uk)("Vuex@3.x"),j={href:"https://uniapp.dcloud.io/",target:"_blank",rel:"noopener noreferrer"},y=(0,e.Uk)("uni-app"),U={href:"https://v1.uviewui.com/",target:"_blank",rel:"noopener noreferrer"},W=(0,e.Uk)("uview-ui@1.8.4"),L=(0,e.uE)('<h2 id="开发环境" tabindex="-1"><a class="header-anchor" href="#开发环境" aria-hidden="true">#</a> 开发环境</h2><p><code>HBuilderx</code> + <code>微信开发者工具</code></p><h2 id="启动步骤" tabindex="-1"><a class="header-anchor" href="#启动步骤" aria-hidden="true">#</a> 启动步骤</h2><ol><li>拖动项目文件夹到HBuilderx侧边栏</li><li>运行到小程序模拟器 -&gt; 微信开发者</li></ol><p>注意事项：请在微信开发者工具找到 设置—&gt;安全设置 打开服务端口以便Hbuilderx拉起微信开发者工具</p><h2 id="注意事项" tabindex="-1"><a class="header-anchor" href="#注意事项" aria-hidden="true">#</a> 注意事项</h2><h3 id="_1-拉取代码" tabindex="-1"><a class="header-anchor" href="#_1-拉取代码" aria-hidden="true">#</a> 1.拉取代码</h3><p><strong>每次获取最新的代码后，请在HBuilderX中关闭所有的页签后再进行代码编写！！！</strong></p><p>该步骤主要原因为远程仓库更新了文件，Hbuilderx未关闭的页签会发生不同步该文件的情况。</p><h3 id="_2-新建页面" tabindex="-1"><a class="header-anchor" href="#_2-新建页面" aria-hidden="true">#</a> 2.新建页面</h3><p><strong>小程序页面相关配置在pages.json中</strong></p><ol><li>确定该模块属于主包还是分包</li><li>主包页面放置pages属性中，分包页面放置subPackages属性中</li></ol><h3 id="_3-底部安全距离" tabindex="-1"><a class="header-anchor" href="#_3-底部安全距离" aria-hidden="true">#</a> 3.底部安全距离</h3><p>适用场景：设计稿底部存在按钮等</p><p>添加方法：</p><ul><li><p>底部没有额外间距：使用uview提供的<code>safe-area-inset</code> 类名即可</p></li><li><p>底部有额外间距</p><div class="language-scss ext-scss line-numbers-mode"><pre class="language-scss"><code><span class="token comment">// 底部有10rpx内间距</span>\n<span class="token property">padding-bottom</span><span class="token punctuation">:</span> 10rpx<span class="token punctuation">;</span>\n<span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>10rpx <span class="token operator">+</span> <span class="token function">constant</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property">padding-bottom</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>10rpx <span class="token operator">+</span> <span class="token function">env</span><span class="token punctuation">(</span>safe-area-inset-bottom<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div></li></ul><h3 id="_4-静态资源" tabindex="-1"><a class="header-anchor" href="#_4-静态资源" aria-hidden="true">#</a> 4.静态资源</h3><p><strong>项目中使用到的所有图片、视频请上传到七牛云<code>cosla-static</code> 空间下，并添加<code>miniprogram/</code>路径前缀</strong>，新版七牛云直接上传至<code>miniprogram</code>目录即可。</p><p>七牛云示例外链：http://static.shinwell.cn/miniprogram/camera_icon.png</p><p><em>七牛云账号请咨询其他前端小伙伴</em></p><h3 id="_5-网络请求" tabindex="-1"><a class="header-anchor" href="#_5-网络请求" aria-hidden="true">#</a> 5.网络请求</h3><p>所有的网络请求方法均放置在<code>api</code>文件夹中，根据模块命名请求文件，模块中放置该模块所有的请求方法。</p><p>请求方法书写示例：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// user.js</span>\n\n<span class="token comment">// 根据authCode获取临时token</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getOpenApiTempToken</span> <span class="token operator">=</span> <span class="token parameter">authCode</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/open-api/temp-token/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>authCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token comment">// 根据临时token获取当前用户的token</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUserToken</span> <span class="token operator">=</span> <span class="token parameter">tempToken</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/user/token/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tempToken<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>\n\n<span class="token comment">// 获取用户信息</span>\n<span class="token keyword">const</span> <span class="token function-variable function">getUserInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/user/info&#39;</span><span class="token punctuation">)</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n\tgetOpenApiTempToken<span class="token punctuation">,</span>\n\tgetUserToken<span class="token punctuation">,</span>\n\tgetUserInfo\n<span class="token punctuation">}</span>\n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>注意事项：<strong>项目使用统一管理api请求的方法，故请求方法必须导出才能在页面中使用，且所有请求方法均不能出现重名。</strong></p><p>调用请求方法示例：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token operator">:</span> info <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$u<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">getUserInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>对于网络请求，若响应返回有businessCode且其中code属性值不为1时，默认情况下会弹出错误弹窗。若不需要该弹窗，请在对应请求下添加请求头hideError: &#39;true&#39;。不使用布尔类型的原因为，布尔类型的在响应拦截获取到的值为[object Boolean]</p></blockquote><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">inspectionReportQuery</span> <span class="token operator">=</span> <span class="token parameter">data</span> <span class="token operator">=&gt;</span> uni<span class="token punctuation">.</span>$u<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/inspection-report/query&#39;</span><span class="token punctuation">,</span> data <span class="token punctuation">,</span> <span class="token punctuation">{</span> hideError<span class="token operator">:</span> <span class="token string">&#39;true&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="_6-自定义组件覆盖uview组件样式问题" tabindex="-1"><a class="header-anchor" href="#_6-自定义组件覆盖uview组件样式问题" aria-hidden="true">#</a> 6.自定义组件覆盖uview组件样式问题</h3><p>默认情况下，自定义组件中无法覆盖uview组件样式，原因是小程序中存在样式隔离。解决方案为启用样式共享：</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n    name<span class="token operator">:</span> <span class="token string">&#39;CustomComponent&#39;</span><span class="token punctuation">,</span>\n    options<span class="token operator">:</span><span class="token punctuation">{</span>\n        styleIsolation<span class="token operator">:</span> <span class="token string">&quot;shared&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 启用样式共享</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="_7-onlaunch异步问题" tabindex="-1"><a class="header-anchor" href="#_7-onlaunch异步问题" aria-hidden="true">#</a> 7.onLaunch异步问题</h3><p>产生情况：onLaunch中使用异步请求，同时小程序启动页在onLoad等钩子函数调用网络请求时需要onLaunch的数据。此时，onLaunch中异步请求可能还未执行完成导致启动页拿不到数据引起报错。</p><p>解决方法：</p><ol><li><p>main.js</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$onLaunched <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n\t<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$isResolve <span class="token operator">=</span> resolve\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>App.vue</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">onLaunch</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">try</span><span class="token punctuation">{</span>\n   \t<span class="token keyword">await</span> 异步请求\n    <span class="token comment">//onLaunch异步执行完成</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$isResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n  <span class="token punctuation">}</span><span class="token keyword">catch</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></li><li><p>启动页</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token function">onLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">//等待onLaunch异步完成</span>\n  <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$onLaunched\n \t<span class="token operator">...</span><span class="token punctuation">.</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol><h2 id="项目目录" tabindex="-1"><a class="header-anchor" href="#项目目录" aria-hidden="true">#</a> 项目目录</h2><details class="custom-container details"><summary>点击展开</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>.\n├── App.vue                                 // 根组件\n├── README.md\n├── api                                     // 网络请求\n├── common                                \n│   ├── common.style.scss                   // 全局样式\n│   ├── http.api.js                         // 挂载全局请求的方法\n│   ├── http.interceptor.js                 // 请求拦截器\n│   └── settings.js                         // 项目配置\n├── components                              // 全局组件\n├── main.js\n├── manifest.json                           // 项目配置\n├── package-lock.json\n├── package.json\n├── pages                                   // 页面\n│   ├── inspection                          // 检查分包\n│   └── login\n│       └── index.vue\n├── pages.json                              // 页面配置\n├── static\n│   └── logo.jpg\n├── store                                   // vuex\n│   ├── $u.mixin.js\n│   └── index.js\n├── uni.scss\n├── uni_modules\n├── utils                                   // 工具类\n│   ├── common.js\n│   └── qnBase64.js\n└── uview-ui                            \n\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div></details>',38),$={},C=(0,a(3744).Z)($,[["render",function(n,s){const a=(0,e.up)("RouterLink"),$=(0,e.up)("OutboundLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[(0,e._)("nav",p,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#技术栈"},{default:(0,e.w5)((()=>[t])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#开发环境"},{default:(0,e.w5)((()=>[l])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#启动步骤"},{default:(0,e.w5)((()=>[o])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#注意事项"},{default:(0,e.w5)((()=>[c])),_:1}),(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_1-拉取代码"},{default:(0,e.w5)((()=>[i])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_2-新建页面"},{default:(0,e.w5)((()=>[r])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_3-底部安全距离"},{default:(0,e.w5)((()=>[u])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_4-静态资源"},{default:(0,e.w5)((()=>[k])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_5-网络请求"},{default:(0,e.w5)((()=>[d])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_6-自定义组件覆盖uview组件样式问题"},{default:(0,e.w5)((()=>[b])),_:1})]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#_7-onlaunch异步问题"},{default:(0,e.w5)((()=>[m])),_:1})])])]),(0,e._)("li",null,[(0,e.Wm)(a,{to:"#项目目录"},{default:(0,e.w5)((()=>[h])),_:1})])])]),g,v,(0,e._)("ul",null,[(0,e._)("li",null,[(0,e._)("a",_,[f,(0,e.Wm)($)])]),(0,e._)("li",null,[(0,e._)("a",w,[x,(0,e.Wm)($)])]),(0,e._)("li",null,[(0,e._)("a",j,[y,(0,e.Wm)($)])]),(0,e._)("li",null,[(0,e._)("a",U,[W,(0,e.Wm)($)])])]),L],64)}]])}}]);